<?php

namespace pragmas\datatrans;

class ValidationHelpers
{
    /**
     * Generate encrypted signature using personal key for datatrans
     *
     * The data transmission is secured by sending the parameter sign, which must contain
     * a digital signature generated by a standard HMAC-SHA-256 hash procedure and using
     * a merchant-specific encryption key. The HMAC key is generated by the system and can be
     * changed at any time in the merchant administration tool https://pilot.datatrans.biz.
     *
     * @param string $data MerchantId, Amount, Currenca and Reference number
     * @param string $key HMAC key
     * @param string $algo encryption algorythm like 'SHA256'
     * @return string signature
     *
     */
    public function encryptData($data, $key, $algo) {
        $keyBin = hex2bin($key);
        return hash_hmac( $algo, $data, $keyBin);
    }

    /**
     * @param string|object $class
     * @param string $prefix
     * @return array
     */
    function getClassConstantsByPrefix($class, $prefix)
    {
        $reflection = new \ReflectionClass($class);
        $prefixLength = strlen($prefix);

        $constants = array();

        foreach ($reflection->getConstants() as $name => $value) {
            if (substr($name, 0, $prefixLength) != $prefix) {
                continue;
            }
            $constants[$value] = $name;
        }

        return $constants;
    }

}
